[include]
    path = .git_user

[gpg]
	program = gpg2

[alias]
  # borrowed from mlcdf's dotfiles
	s = status -s
	aa = add --all
	ci = commit
	co = checkout
	cr = cherry-pick

	undo = reset --soft HEAD~
	prune = fetch --prune

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	logtree = log --graph --oneline --decorate --all

	# Show verbose output about tags, branches or remotes
	# borrowed from jessfraz's dotfiles
	tags = tag -l
	branches = branch -a
	remotes = remote -v

  # Get the current branch name (not so useful in itself, but used in
  # other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"
  # Push the current branch to the remote "origin", and set it to track
  # the upstream branch
  publish = "!git push -u origin $(git branch-name)"
  # Delete the remote version of the current branch
  unpublish = "!git push origin :$(git branch-name)"
	stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[color]
	branch = auto
	diff = auto
	status = auto

[push]
	default = simple
	followTags = true

[status]
	showUntrackedFiles = all
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[core]
	autocrlf = input
	editor = vim
[pull]
	rebase = true
[init]
	defaultBranch = main
